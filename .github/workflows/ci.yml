# .github/workflows/ci.yml
name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  # 1. Run linters and tests in parallel for front-end and back-end
  frontend_tests:
    name: Frontend Lint & Tests
    runs-on: ubuntu-latest
    services:
      # Launch backend service for e2e tests if needed
      backend:
        image: bamandagrams-backend:latest
        ports: [8000:8000]  # expose for Playwright
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: yarn --cwd frontend install
      - name: Lint (ESLint)
        run: yarn --cwd frontend lint
      - name: Type-check
        run: yarn --cwd frontend tsc --noEmit
      - name: Unit Tests
        run: yarn --cwd frontend test --ci --coverage
      - name: E2E Tests
        run: |
          # Start front-end dev server in background
          yarn --cwd frontend dev &
          # Run Playwright tests (with server running)
          npx playwright install --with-deps
          yarn --cwd frontend e2e
        env:
          CI: true

  backend_tests:
    name: Backend Lint & Tests
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci_test
        ports: [5432:5432]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt
          pip install -r backend/requirements-dev.txt
      - name: Lint (ruff and black)
        run: |
          ruff backend/ --exit-zero
          black --check backend/
      - name: Type-check (mypy)
        run: mypy backend/
      - name: Unit & Async Tests (pytest)
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/ci_test
        run: pytest -q backend/tests

  # 2. Build & Deploy (runs after tests if on main branch)
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    needs: [frontend_tests, backend_tests]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node & Build Frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          yarn --cwd frontend install
          yarn --cwd frontend build
      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: frontend/dist
      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy Backend to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only --config backend/fly.toml
      - name: Deploy Frontend to Netlify
        uses: jsmrcaga/action-netlify-deploy@v2.4.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          build_directory: 'frontend/dist'
          NETLIFY_DEPLOY_TO_PROD: true
